; --
; Material library for track shaders, compatible with some original shaders.
; In first half of this file, you can see available templates and parameters for them.
; --

; Global parameters, defined in [INCLUDE] section:
[DEFAULTS]
; HorizonMaterials = horizont  ; fix blending for horizon thing
; WaterForceOpaque =           ; list of meshes to set to opaque
; WaterForceBlending =          ; list of meshes to set to semi-transparent blending

; Digital screens, with pixels and all that
[TEMPLATE: Material_DigitalScreen]
MatrixType = TN            ; valid values: IPS, TN
UseTextureCoordinates = 0  ; with 0, vertex coordinates will be used. sometimes it’s better, sometimes it’s buggier
ScreenScale = 200          ; amount of pixels horizontally
ScreenAspectRatio = 1      ; aspect ratio, height/width
Emissive = 4               ; screen brightness
FlipXY = 0                 ; rotate display 90°

[TEMPLATE: Material_Water]
Type = LAKE                    ; valid values: LAKE, POND, POOL, SEA, OCEAN
UseNormalMapTwice = 0          ; use txNormal as secondary normal map
UseAlphaFromDiffuse = 0        ; use alpha-channel from txDiffuse for blending
; FirstNormalMap = water.dds   ; specify texture from KN5 to be used as main normal map
; SecondNormalMap = water.dds  ; specify different texture from KN5 to be used as secondary normal map

; --
; Here goes second half, actual implementation of those templates.
; If you want to go futher, here is some documentation for the whole format:
; https://github.com/ac-custom-shaders-patch/inipp
; --

[INCLUDE: ../../cars/common/materials_base.ini]

[MATERIAL_ADJUSTMENT_...]
ACTIVE = ${WaterForceOpaque:count}
MESHES = ${WaterForceOpaque}
BLEND_MODE = OPAQUE

[MESH_ADJUSTMENT_...]
ACTIVE = ${WaterForceOpaque:count}
MESHES = ${WaterForceOpaque}
IS_TRANSPARENT = 0

[MATERIAL_ADJUSTMENT_...]
ACTIVE = ${WaterForceBlending:count}
MESHES = ${WaterForceBlending}
BLEND_MODE = ALPHA_BLEND

[MESH_ADJUSTMENT_...]
ACTIVE = ${WaterForceBlending:count}
MESHES = ${WaterForceBlending}
IS_TRANSPARENT = 1

[MATERIAL_ADJUSTMENT_0_FIX_HORIZON]
ACTIVE = ${HorizonMaterials:count}
MATERIALS = ${HorizonMaterials}
BLEND_MODE = ALPHA_TEST

[TEMPLATE: Material_DigitalScreen EXTENDS _Base_Material_Custom]
@OUTPUT = SHADER_REPLACEMENT_0_SCREEN_...
TAGS = DIGITAL_SCREEN
SHADER = smDigitalScreen
PROP_0_SMSCREENTYPE = smScreenType, $" $MatrixType == 'IPS' and 1 or 0 "
PROP_0_SMSCREENSCALE = smScreenScale, $ScreenScale, $" $ScreenScale * $ScreenAspectRatio "
PROP_0_SMUSETEXTURECOORDINATES = smUseTextureCoordinates, $UseTextureCoordinates
PROP_0_SMFLIPXY = smFlipXY, $FlipXY
PROP_0_KSEMISSIVE = ksEmissive, $Emissive
PROP_0_KSAMBIENT = ksAmbient, 1000

[MIXIN: _Material_Water_ReuseNormal]
@ACTIVE = ${UseNormalMapTwice}
RESOURCE_0 = txDetailNM
RESOURCE_REF_0 = txNormal

[MIXIN: _Material_Water_FirstNormalMap]
@ACTIVE = ${FirstNormalMap:count}
RESOURCE_0 = txNormal
RESOURCE_TEXTURE_0 = $FirstNormalMap

[MIXIN: _Material_Water_SecondNormalMap]
@ACTIVE = ${SecondNormalMap:count}
RESOURCE_0 = txDetailNM
RESOURCE_TEXTURE_0 = $SecondNormalMap

[MIXIN: _Material_Water_UseAlphaFromDiffuse]
@ACTIVE = ${UseAlphaFromDiffuse}
PROP_0_KSEMISSIVE = ksEmissive, -1, 0, 0

[FUNCTION: _Material_Water_MapType]
ARGUMENTS = Type
CODE = '
  local types = {
    OCEAN = -2,
    LAKE = -1,
    SEA = 0,
    POOL = 1,
    POND = 3
  }
  return types[Type] or 0
'

[TEMPLATE: Material_Water EXTENDS _Base_Material_Custom]
@OUTPUT = SHADER_REPLACEMENT_0_WATER_...
TAGS = NEW_WATER
SHADER = smWaterSurface
PROP_0_KSALPHAREF = ksAlphaRef, $" _Material_Water_MapType( $Type ) "
@MIXIN = _Material_Water_ReuseNormal
@MIXIN = _Material_Water_FirstNormalMap
@MIXIN = _Material_Water_SecondNormalMap
@MIXIN = _Material_Water_UseAlphaFromDiffuse