; --
; Material library for interior shaders, compatible with some original shaders.
; In first half of this file, you can see available templates and parameters for them.
; --

; Global parameters, defined in [INCLUDE] section:
[DEFAULTS]
DisableDev = 1  ; This option disables materials from “dev_materials_interior.ini” which might be accidendally included with older configs

; Digital screens, with pixels and all that
[TEMPLATE: Material_DigitalScreen]
MatrixType = IPS           ; valid values: IPS, TN
UseTextureCoordinates = 1  ; with 0, vertex coordinates will be used. sometimes it’s better, sometimes it’s buggier
ScreenScale = 480          ; amount of pixels horizontally
ScreenAspectRatio = 0.25   ; aspect ratio, height/width
Emissive = 4               ; screen brightness
FlipXY = 0                 ; rotate display 90°

; Alternative way of making digital screens: cover it with a piece of glass and alter that piece
; with this adjustment, changing the way it filters things behind it (by using multiplicative blending)
[TEMPLATE: Material_DigitalScreen_GlassOverlay]
MatrixType = IPS           ; valid values: IPS, TN
UseTextureCoordinates = 1  ; with 0, vertex coordinates will be used. sometimes it’s better, sometimes it’s buggier
ScreenScale = 480          ; amount of pixels horizontally
ScreenAspectRatio = 0.25   ; aspect ratio, height/width
FlipXY = 0                 ; rotate display 90°

; UPD:
; EVERYTHING RELATED TO PBR SHADERS WILL BE REMOVED SOON
; DO NOT USE IT, PLEASE

; Specialized material templates with predefined settings for easier setup, for “ksPerPixelMultiMap” and “ksPerPixelMultiMap_NMDetail”
; Those templates are meant for materials set in Kunos style: with occlusion map in “txDiffuse” and color in “txDetail”. If your materials
; are different, change “OcclusionSource” and “ColorSource” (look for “Material_InteriorPBR” a bit lower).
[TEMPLATE: Material_Velvet EXTENDS Material_InteriorPBR]
Smoothness = 0
Reflectance = 0.1

[TEMPLATE: Material_Fabric EXTENDS Material_InteriorPBR]
Smoothness = 0
Reflectance = 0.02

[TEMPLATE: Material_Carpet EXTENDS Material_InteriorPBR]
Smoothness = 0
OcclusionMap = -0.1, 1

[TEMPLATE: Material_Leather EXTENDS Material_InteriorPBR]
Smoothness = 0.65
Reflectance = 0.1

[TEMPLATE: Material_DashboardLeather EXTENDS Material_InteriorPBR]
Smoothness = 0.01
Reflectance = 0.02

[TEMPLATE: Material_Plastic EXTENDS Material_InteriorPBR]
Smoothness = 0.7
Reflectance = 0.1

[TEMPLATE: Material_Metal EXTENDS Material_InteriorPBR]
Smoothness = 0.95
Metalness = 0.9
Reflectance = 0.0
BrightnessAdjustment = 2
CubemapReflectionBlur = 1

[TEMPLATE: Material_Chrome EXTENDS Material_InteriorPBR]
Smoothness = 0.95
Metalness = 0.85
Reflectance = 0.0
BrightnessAdjustment = 1
CubemapReflectionBlur = 1

[TEMPLATE: Material_Carbon EXTENDS Material_InteriorPBR]
UseCarbonDetails = $" not ${HasDetailNormals:bool} "
HasDetailNormals = 1
UseClearCoat = 1
Smoothness = 0.9
Reflectance = 0.2
CubemapReflectionBlur = 0.35

; Uses a custom leather details texture with extra PBR details
; Texture is from https://cc0textures.com/view?tex=Leather02
[TEMPLATE: Material_LeatherDetailed EXTENDS Material_InteriorPBR]
Smoothness = 0.5
Reflectance = 0.02
UseLeatherDetails = 1
ApplyTilingFix = 1

; Generic PBR material, for “ksPerPixelMultiMap” and “ksPerPixelMultiMap_NMDetail”
[TEMPLATE: Material_InteriorPBR]
HasDetailNormals = 1      ; set to 0 for meshes with “ksPerPixelMultiMap” shader

UseCarbonDetails = 0      ; if you have carbon texture made with “ksPerPixelMultiMap”, set this to 1 to load carbon normals
CarbonDetailsScale = 420  ; adjust this parameter to alter carbon scale, if you’re using previous option

UseLeatherDetails = 0     ; or, this option would add a nice PBR leather normal map for normal details
LeatherDetailsScale = 40  ; scale of that texture

UseClearCoat = 0            ; set to 1 to add clear coat to material
ClearCoatSmoothness = 0.97  ; smoothness of clear coat
ClearCoatReflectance = 0.2  ; clear coat’s reflectance
ClearCoatIntensity = 1      ; multiplier for clear coat, with 0, it’s pretty much disabled
ClearCoatThickness = 0.1    ; thickness for absorbing light from underneath
ClearCoatIOR = 1            ; index of refraction for clear coat material, value bigger than 1 makes absorbing much less angle-dependant
ClearCoatNormalsShare = 0   ; how much of “txNormalDetail” goes to clear coat

OcclusionSource = luminance      ; where to take occlusion from, valid values: none, luminance, mapsAlpha
ColorSource = diffuseNormalized  ; where to take diffuse color from, valid values: diffuse, diffuseNormalized, forceWhite

Smoothness = 0.9    ; smoothess before it’s scaled by texture
Metalness = 0       ; metalness before it’s scaled by texture
Reflectance = 0.01  ; reflectance before it’s scaled by texture

AmbientSpecular = 0.2   ; ambient specular by Stereo (not PBRy, but that should do for now, until I learn more about it all)
AmbientSpecularEXP = 4  ; concentration of specular ambient

OcclusionMap = 0, 1    ; in what range occlusion scales
SmoothnessMap = 1, 1   ; same for smoothness (for it, green channel of txMaps is used)
MetalnessMap = 1, 1    ; same for metalness (red channel of txMaps; sure it’s a questionable idea, but here we are)
ReflectanceMap = 1, 1  ; same for smoothness (blue channel of txMaps)

; BrightnessAdjustment = 0      ; redefine diffuse multiplier (by default, “ksDiffuse” value is used)
; DetailNormalBlend = 0         ; redefine detail normal map blend
CubemapReflectionBlur = 0       ; how much to blur cubemap reflection, good for shiny interior materials
ReflectionOcclusionFactor = 2   ; multiplier for AO for reflections, increase to make it shinier in shadows
ApplyTilingFix = 0              ; set to 1 to apply tiling fix (adds one or two texture reads per pixel)
ApplyShadowBiasFix = 0          ; set to 1 to apply shadows bias fix for interior
ExtraSharpLocalReflections = 0  ; increase up to 1 to make local reflections sharper

NormalDetailInPBRFormat = 0             ; set to 1 to use blue channel of txNormalDetail as occlusion map and alpha channel as specular map
NormalDetailPBROccludedColor = 0, 0, 0  ; occluded by txNormalDetail color could be non-zero, for better gradients
NormalDetailPBRDiffuseFactor = 1        ; how much txNormalDetail does occlude diffuse (for better use of texture range, you can make it more constast and then tune down here)
NormalDetailPBRSpecularFactor = 1       ; same, but for specular (alpha)

; --
; Here goes second half, actual implementation of those templates.
; If you want to go futher, here is some documentation for the whole format:
; https://github.com/ac-custom-shaders-patch/inipp
; --

[INCLUDE: materials_base.ini]
[SHADER_REPLACEMENT_0SCREEN: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_VELVET_MM: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_VELVET_MMNND: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_LEATHER_MMNND: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_LEATHER_MM: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_ROUGH_LEATHER_MMNND: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_PLASTIC_LEATHER_MMNND: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_DASHBOARD_LEATHER_MMNND: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_CARBON_MMNND: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_CARBON_MM: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_CARBON_MM: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_CARPET_MMNND: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_PLASTIC_MM: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_PLASTIC_MMNND: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_FABRIC_MMNND: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_METAL_MM: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_STEEL_OLD_MMNND: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_BRUSHED_MMNND: _DeactivateDevMaterial]
[SHADER_REPLACEMENT_0INT_COMPOSITE_MM: _DeactivateDevMaterial]

[TEMPLATE: Material_DigitalScreen EXTENDS _Base_Material_Custom]
@OUTPUT = SHADER_REPLACEMENT_0_SCREEN_...
TAGS = DIGITAL_SCREEN
SHADER = smDigitalScreen
PROP_0_SMSCREENTYPE = smScreenType, $" $MatrixType == 'IPS' and 1 or 0 "
PROP_0_SMSCREENSCALE = smScreenScale, $ScreenScale, $" $ScreenScale * $ScreenAspectRatio "
PROP_0_SMUSETEXTURECOORDINATES = smUseTextureCoordinates, $UseTextureCoordinates
PROP_0_SMFLIPXY = smFlipXY, $FlipXY
PROP_0_KSEMISSIVE = ksEmissive, $Emissive

[TEMPLATE: Material_DigitalScreen_GlassOverlay EXTENDS _Base_Material_Custom]
@OUTPUT = SHADER_REPLACEMENT_0_SCREEN_...
TAGS = DIGITAL_SCREEN
BLEND_MODE = MULTIPLY
SHADER = smDigitalScreenGlassOverlay
PROP_0_SMSCREENTYPE = smScreenType, $" $MatrixType == 'IPS' and 1 or 0 "
PROP_0_SMSCREENSCALE = smScreenScale, $ScreenScale, $" $ScreenScale * $ScreenAspectRatio "
PROP_0_SMUSETEXTURECOORDINATES = smUseTextureCoordinates, $UseTextureCoordinates
PROP_0_SMFLIPXY = smFlipXY, $FlipXY

[MIXIN: _Material_InteriorPBR_ClearCoat]
@ACTIVE = $UseClearCoat
PROP_0_PBCLEARCOATSMOOTHNESS = pbClearCoatSmoothness, $ClearCoatSmoothness
PROP_0_PBCLEARCOATREFLECTANCE = pbClearCoatReflectance, $ClearCoatReflectance
PROP_0_PBCLEARCOATINTENSITY = pbClearCoatIntensity, $ClearCoatIntensity
PROP_0_PBCLEARCOATTHICKNESS = pbClearCoatThickness, $ClearCoatThickness
PROP_0_PBCLEARCOATIOR = pbClearCoatIOR, $ClearCoatIOR
PROP_0_PBCLEARCOATNORMALSHARE = pbClearCoatNormalShare, $ClearCoatNormalsShare

[MIXIN: _Material_InteriorPBR_LeatherDetails]
; Texture is from https://cc0textures.com/view?tex=Leather02
@ACTIVE = $UseLeatherDetails
PROP_0_DETAILNORMALBLEND = detailNormalBlend, 0.5
PROP_0_DETAILUVMULTIPLIER = detailUVMultiplier, $LeatherDetailsScale
RESOURCE_1 = txNormalDetail
RESOURCE_FILE_1 = common/leather_pbr.dds

[MIXIN: _Material_InteriorPBR_CarbonDetails]
@ACTIVE = $UseCarbonDetails
PROP_0_DETAILNORMALBLEND = detailNormalBlend, 1
PROP_0_DETAILUVMULTIPLIER = detailUVMultiplier, $CarbonDetailsScale
RESOURCE_0 = txDetail
RESOURCE_FILE_0 = common/carbon.png
RESOURCE_1 = txNormalDetail
RESOURCE_FILE_1 = common/carbon_nm.png

[MIXIN: _Material_InteriorPBR_ReplaceTxMaps]
@ACTIVE = ${ReplaceTxMaps:exists}
RESOURCE_2 = txMaps
RESOURCE_COLOR_2 = $ReplaceTxMaps

[MIXIN: _Material_InteriorPBR_BrightnessAdjustment]
@ACTIVE = ${BrightnessAdjustment:count}
PROP_0_KSDIFFUSE = ksDiffuse, $BrightnessAdjustment

[MIXIN: _Material_InteriorPBR_DetailNormalBlendAdjustment]
@ACTIVE = ${DetailNormalBlend:count}
PROP_0_DETAILNORMALBLEND = detailNormalBlend, $DetailNormalBlend

[MIXIN: _Material_InteriorPBR_ApplyTilingFix]
@ACTIVE = ${ApplyTilingFix}
PROP_0_KSALPHAREF = ksAlphaRef, -193

[MIXIN: _Material_InteriorPBR_ApplyShadowBiasFix]
@ACTIVE = ${ApplyShadowBiasFix}
ShadowBiasFixStrength = 1
PROP_0_SHADOWBIASMULT = shadowBiasMult, $" -1 * $ShadowBiasFixStrength "

[FUNCTION: _InteriorPBR_MultiplyMap]
ARGUMENTS = map, multiplier
PRIVATE = 0
CODE = '
  if type(map) ~= "table" then 
    if type(map) ~= "number" then map = 1 end
    map = { map, map } 
  end
  if type(multiplier) ~= "number" then multiplier = 1 end
  return { map[1] * multiplier, map[2] * multiplier }'

[TEMPLATE: Material_InteriorPBR EXTENDS _Base_Material_Custom]
@OUTPUT = SHADER_REPLACEMENT_0_INTPBR_...
TAGS = PBR
@MIXIN = _Material_InteriorPBR_ClearCoat
@MIXIN = _Material_InteriorPBR_CarbonDetails
@MIXIN = _Material_InteriorPBR_LeatherDetails
@MIXIN = _Material_InteriorPBR_ReplaceTxMaps
@MIXIN = _Material_InteriorPBR_BrightnessAdjustment
@MIXIN = _Material_InteriorPBR_DetailNormalBlendAdjustment
@MIXIN = _Material_InteriorPBR_ApplyTilingFix
@MIXIN = _Material_InteriorPBR_ApplyShadowBiasFix
SHADER = $" ( $HasDetailNormals == 1 or $UseCarbonDetails == 1 or $UseLeatherDetails )
  and ( $UseClearCoat == 1 and 'nePBR_MultiMap_NMDetail_ClearCoat' or 'nePBR_MultiMap_NMDetail' ) 
  or ( $UseClearCoat == 1 and 'nePBR_MultiMap_ClearCoat' or 'nePBR_MultiMap' ) "
FILL_MISSING_TEXTURES = 1
PROP_0_PBOCCLUSION = pbOcclusion, $OcclusionMap
PROP_0_PBSMOOTHNESS = pbSmoothness, $" _InteriorPBR_MultiplyMap( $SmoothnessMap, $Smoothness ) "
PROP_0_PBMETALNESS = pbMetalness, $" _InteriorPBR_MultiplyMap( $MetalnessMap, $Metalness ) "
PROP_0_PBREFLECTANCE = pbReflectance, $" _InteriorPBR_MultiplyMap( $ReflectanceMap, $Reflectance ) "
PROP_0_PBAMBIENTSPEC = pbAmbientSpec, $AmbientSpecular
PROP_0_PBAMBIENTSPECEXP = pbAmbientSpecEXP, $AmbientSpecularEXP
PROP_0_PBOCCLUSIONSOURCE = pbOcclusionSource, $" $OcclusionSource == 'luminance' and 1 or $OcclusionSource == 'mapsAlpha' and 2 or 0 "
PROP_0_PBCOLORSOURCE = pbColorSource, $" $ColorSource == 'diffuseNormalized' and 1 or $ColorSource == 'forceWhite' and 2 or 0 "
PROP_0_PBREFLECTIONBLURENV = pbReflectionBlurEnv, $" $CubemapReflectionBlur * 6 "
PROP_0_PBNORMALDETAILINPBRFORMAT = pbNormalDetailInPBRFormat, $" $UseLeatherDetails or $NormalDetailInPBRFormat "
PROP_0_PBNORMALDETAILPBROCCLUDEDCOLOR = pbNormalDetailPBROccludedColor, $" $UseLeatherDetails and { 0.1, 0.1, 0.1 } or ${NormalDetailPBROccludedColor:vec3}"
PROP_0_PBNORMALDETAILPBRMULTS = pbNormalDetailPBRMults, $" $UseLeatherDetails and { 0.2, 0.3 } or { $NormalDetailPBRDiffuseFactor, $NormalDetailPBRSpecularFactor } "
PROP_0_EXTRASHARPLOCALREFLECTIONS = extExtraSharpLocalReflections, -0.001
DOUBLE_FACE_SHADOW_BIASED = 1
